# This file contains pin mappings for the Creality Ender 5 Plus.
# Ender 5 Plus stock uses a Creality v2.2 board, similar to CR-20 Pro.
# To use this config, the firmware should be compiled for the AVR
# atmega2560.

# See docs/Config_Reference.md for a description of parameters.

[include Line_Purge.cfg]

[include chromaHead.cfg]
[include kcm.cfg]
[include ecm_1.cfg]
[include cp_macro.cfg]
[include input_shaper.cfg]

[virtual_sdcard]
path: ~/printer_data/gcodes

[exclude_object]

[idle_timeout]
timeout: 1800
gcode:
    {% if printer.pause_resume.is_paused %}
    M118 Idle Timeout reached
    M117 Disable hotend_fan
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    STATUS_READY
    {% else %}
    #SLEEP
    {% endif %}

[display_status]

[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45474E621B02672A-if00 # This is the serial address of your eddy probe. This can be found by using the terminal of your klipper instance (typically through SSH) and using the command ```ls /dev/serial/by-id``` 
restart_method: command

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 1.0
#i2c_address:
i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 33
y_offset: -1.5
# z_offset: 0.0
#data_rate: 500

[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[respond]

[bed_mesh]
horizontal_move_z: 2
speed: 300
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. 
mesh_min: 80, 60 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 365, 346 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 10, 10
algorithm: bicubic
scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.


[safe_z_home]
home_xy_position: 170, 190
speed: 200
z_hop: 10
z_hop_speed: 5

###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[save_variables]
filename: ~/printer_data/config/variables.cfg

# Uncomment this if you are using the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate.

[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
  {% endif %}

[gcode_macro G28]
rename_existing: G28.1
gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %} 
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE SCAN_MODE=rapid METHOD=scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg

#### end of EDDY ###

[gcode_macro START_PRINT]
# variable_bed_temp: 60
# variable_ext_temp: 210
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP} # set extruder and wait
    # Use absolute coordinates
    G90
    # Home the printer
    G92 E0 ;Reset Extruder
    G1 E-1 F2700
    # G28
    # BED_MESH_CALIBRATE
    M109 S{EXTRUDER_TEMP} # set extruder and wait
    M190 S{BED_TEMP} #wait for bed temp
    # Move the nozzle near the bed
   # BTT_BED_MESH_CALIBRATE SCAN_MODE=rapid METHOD=scan
    BED_MESH_CALIBRATE
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # PURGE_LINE
    # Line_Purge
    
[gcode_macro PURGE_LINE]
gcode:
    # Test Line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up
    G1 X1.1 Y30 Z0.0 F5000.0 ;Move to start position
    G1 X1.1 Y320.0 Z0.0 F1500.0 E15 ;Draw the first line
    G1 X1.2 Y320.0 Z0.0 F5000.0 ;Move to side a little
    G1 X1.2 Y30 Z0.0 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up

######################################################################
# Filament Change
######################################################################
# After filament has been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M0]
gcode:
    PAUSE

[gcode_arcs]
#resolution: 1.0

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}  

[gcode_macro HEAT_EXTRUDER]
gcode:
    M109 S{215}

[gcode_macro HEAT_BED]
gcode:
    M190 S{62}    

[gcode_macro HEAT_BOTH]
gcode:
    M140 S{62}
    M104 S{215}
      
[gcode_macro STARTUP]
gcode:
    G28
    M190 S{62}
    Z_TILT_ADJUST
    M104 S{215}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro                              
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-150 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M0] 
gcode: 
    PAUSE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  #Move nozzle away from print in Z
  G91
  G1 Z10 F3000
  END_PRINT

[gcode_macro END_PRINT]
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x-5|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y-5|default(100)|float %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Retract a bit, drop, retract bit more
    G91
    G92 E0 ;Reset Extruder
    G1 E-2 F2700
    G1 Z10 F3000
#    G1 E-2 Z0.2 F2400
    # Move nozzle away from print while retracting
    G90
    G1 X{X_MAX} Y{Y_MAX} E-3 F3000
    # Disable steppers
    M84

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1   

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    239, 210, 20

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 352
position_min: 25
position_max: 352
homing_speed: 100

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 350
position_min: 0
position_max: 350
homing_speed: 100

[stepper_z]
step_pin: PC1
dir_pin: PC3
enable_pin: !PC7
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_max: 404
position_min: -4
homing_speed: 10.0

[stepper_z1]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 4

[z_tilt]
z_positions: 378, 228
          2, 228
points: 340, 198
          28, 198
speed: 180
horizontal_move_z: 5
retries: 10
retry_tolerance: .0050

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: pid
#pid_Kp: 690.34
#pid_Ki: 111.47
#pid_Kd: 1068.83
min_temp: 0
max_temp: 130


[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AR0JSV1S-if00-port0

#[filament_switch_sensor filament_sensor]
#switch_pin:PE4

[input_shaper]
#shaper_freq_x: 68.0
#shaper_type_x: mzv
#shaper_freq_y: 43.0
#shaper_type_y: ei

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 4050
max_z_velocity: 10
max_z_accel: 100

[screws_tilt_adjust]
screw1: 48, 90
screw1_name: front left screw
screw2: 321, 90
screw2_name: front right screw
screw3: 321, 350
screw3_name: rear right screw
screw4: 48, 350
screw4_name: rear left screw
horizontal_move_z: 5.
speed: 100
screw_thread: CW-M3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 15.169
#*# pid_ki = 0.760
#*# pid_kd = 75.655
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.526
#*# pid_ki = 0.794
#*# pid_kd = 1311.490
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 56.8
#*# shaper_type_y = ei
#*# shaper_freq_y = 52.6
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.041203, 0.134551, 0.197817, 0.229751, 0.217912, 0.211042, 0.226467, 0.250595, 0.355703, 0.351119
#*# 	  0.112614, 0.167471, 0.247002, 0.229643, 0.234983, 0.210940, 0.223656, 0.239783, 0.390111, 0.366841
#*# 	  0.087421, 0.127160, 0.179917, 0.188323, 0.184740, 0.142293, 0.156500, 0.200639, 0.261139, 0.274244
#*# 	  0.042995, 0.080832, 0.175536, 0.182602, 0.168618, 0.118843, 0.158789, 0.213412, 0.255606, 0.287299
#*# 	  0.089405, 0.067222, 0.097232, 0.125999, 0.049773, 0.047201, 0.140155, 0.050855, 0.079209, 0.155451
#*# 	  0.191550, 0.069697, 0.059381, 0.099120, 0.069032, 0.006836, 0.057093, 0.029518, 0.163726, 0.197953
#*# 	  0.203992, 0.085647, 0.097432, 0.029311, 0.016888, -0.110349, -0.063244, -0.017439, 0.096585, 0.196594
#*# 	  0.185396, 0.110600, 0.041980, -0.013684, -0.015267, -0.114476, -0.078893, -0.054522, 0.038445, 0.181602
#*# 	  0.000545, 0.099322, 0.079700, -0.029368, -0.045604, -0.096933, -0.088023, -0.119601, -0.019868, 0.098978
#*# 	  -0.214293, -0.161178, -0.160687, -0.218193, -0.226784, -0.240732, -0.240901, -0.255991, -0.259864, -0.233475
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 80.0
#*# max_x = 364.94
#*# min_y = 60.0
#*# max_y = 345.93
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3276136.406,0.090000:3275485.400,0.130000:3274815.325,
#*# 	0.170000:3274165.471,0.210000:3273489.094,0.250000:3272777.379,
#*# 	0.290000:3272237.880,0.330000:3271561.397,0.370000:3270950.977,
#*# 	0.410000:3270271.532,0.450000:3269752.461,0.490000:3269128.400,
#*# 	0.530000:3268561.696,0.570000:3268001.118,0.610000:3267475.476,
#*# 	0.650000:3266932.000,0.690000:3266398.275,0.730000:3265890.908,
#*# 	0.770000:3265342.394,0.810000:3264854.552,0.850000:3264360.205,
#*# 	0.890000:3263863.245,0.930000:3263382.345,0.970000:3262913.292,
#*# 	1.010000:3262454.716,1.050000:3261990.761,1.090000:3261557.752,
#*# 	1.130000:3261092.012,1.170000:3260679.479,1.210000:3260250.637,
#*# 	1.250000:3259863.718,1.290000:3259447.401,1.330000:3259021.828,
#*# 	1.370000:3258648.157,1.410000:3258247.488,1.450000:3257888.979,
#*# 	1.490000:3257491.876,1.530000:3257147.349,1.570000:3256774.537,
#*# 	1.610000:3256416.760,1.650000:3256092.230,1.690000:3255728.513,
#*# 	1.730000:3255380.475,1.770000:3255065.725,1.810000:3254719.693,
#*# 	1.850000:3254389.168,1.890000:3254096.026,1.930000:3253801.508,
#*# 	1.970000:3253492.920,2.010000:3253195.505,2.050000:3252879.422,
#*# 	2.090000:3252624.702,2.130000:3252352.413,2.170000:3252045.069,
#*# 	2.210000:3251786.211,2.250000:3251504.209,2.290000:3251242.558,
#*# 	2.330000:3250981.275,2.370000:3250710.434,2.410000:3250464.792,
#*# 	2.450000:3250213.646,2.490000:3249988.412,2.530000:3249738.915,
#*# 	2.570000:3249512.630,2.610000:3249289.444,2.650000:3249065.475,
#*# 	2.690000:3248849.267,2.730000:3248599.632,2.770000:3248400.850,
#*# 	2.810000:3248180.460,2.850000:3247996.351,2.890000:3247769.715,
#*# 	2.930000:3247575.730,2.970000:3247369.745,3.010000:3247164.815,
#*# 	3.050000:3246989.529,3.090000:3246788.304,3.130000:3246605.221,
#*# 	3.170000:3246427.447,3.210000:3246237.092,3.250000:3246078.106,
#*# 	3.290000:3245888.727,3.330000:3245726.756,3.370000:3245551.461,
#*# 	3.410000:3245353.091,3.450000:3245215.673,3.490000:3245054.293,
#*# 	3.530000:3244873.858,3.570000:3244752.445,3.610000:3244588.609,
#*# 	3.650000:3244432.721,3.690000:3244290.413,3.730000:3244130.958,
#*# 	3.770000:3243977.761,3.810000:3243841.713,3.850000:3243687.691,
#*# 	3.890000:3243539.545,3.930000:3243381.556,3.970000:3243268.376,
#*# 	4.010000:3243134.502,4.050000:3243008.019
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 29.576993
